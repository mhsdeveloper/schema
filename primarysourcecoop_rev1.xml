<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="https://tei-c.org/Vault/P5/current/xml/tei/custom/schema/relaxng/tei_customization.rnc" type="application/relax-ng-compact-syntax"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:mhs="http://www.masshist.org/ns/1.0" xml:lang="en"
  xmlns:sch="http://purl.oclc.org/dsdl/schematron">
  <teiHeader>
    <fileDesc>
      <titleStmt>
        <title type="short">primarysourcecoop</title>
        <title>Primary Source Cooperative at the Masschusetts Historical Society</title>
        <author xml:id="sb">Syd Bauman</author>
        <author xml:id="bb"><persName ref="p:wbeck.del">William Beck</persName></author>
        <author xml:id="lj">Laura Johnson</author>
      </titleStmt>
      <publicationStmt>
        <publisher>MHS</publisher>
        <availability>
          <licence>Available under the terms of the <ref
              target="http://creativecommons.org/licenses/by-sa/4.0/">Creative Commons
              Attribution-ShareAlike 4.0 International license</ref>.</licence>
        </availability>
      </publicationStmt>
      <notesStmt>
        <note type="ns">http://www.masshist.org/ns/1.0</note>
      </notesStmt>
      <sourceDesc>
        <p>Born digital.</p>
      </sourceDesc>
    </fileDesc>
    <revisionDesc>
      <change who="#lj" when="2021-06-04">Removed unnecessary Schematron rules about the <gi>opener</gi>.</change>
      <change who="#sb" when="2021-06-04">
        With <persName ref="#lj"/>:
        <list>
          <item>Fix not-in-future logic</item>
          <item>add co-occurence constrained specifications to constrain content of source notes</item>
          <item>Added <name>no_space_child_of_docbody</name> constraint</item>
        </list>
      </change>
      <change who="#lj" when="2021-05-27">Added schematron rules to <gi>opener</gi>. </change>
      <change who="#sb" when="2021-05-27">
        <list>
          <item>Continued work on the docbody-insertion-docback structure</item>
          <item>Removed a (superfluous?) specification for
          <gi>date</gi> that defined 2 <soCalled>new</soCalled> attributes, <att>from-custom</att>
          and <att>to-custom</att> to be W3C date.</item>
          <item>Removed extraneous specification for <gi>head</gi>
          (probably there because I did not realize there already was
          one, and added one)</item>
        </list>
      </change>
      <change who="#sb" when="2021-05-20">
        <list>
          <item>Per conversation with #lj, created structure for
          validation of the content of <gi>body</gi> as different
          types of <gi>div</gi>. In particular, established three new
          specifications for <name>docbody</name>,
          <name>insertion</name>, and <name>docback</name>, giving
          each the alternate identifier <gi>div</gi> and a required
          <att>type</att> with a value that matches the name of the
          specified construct (i.e., <val>docbody</val>,
          <val>insertion</val>, and <val>docback</val>). Also removed
          those values from the standard defintion of
          <gi>div</gi>.</item>
          <item>Tightened regexp in <name>datingAttr</name>
          constraint, and no longer apply that constraint to
          <gi>time</gi>, as MHS Coop does not use <gi>time</gi>.</item>
        </list>
      </change>
      <change who="#sb" when="2021-05-19">With #lj, tweak some of the Schematron I added yesterday</change>
      <change who="#sb" when="2021-05-18">
        <list>
          <item>Added the WWP’s datingAttr constraint. This may not be
          appropriate, as it requires <emph>all</emph> instances of
          <gi>date</gi> to have a <att>when</att> (or whatever),
          including the one in <gi>bibl</gi> in <gi>sourceDesc</gi>,
          which I think the MHSers do not want.</item>
          <item>Added source_date_content constraint, which may need
          to be tweaked.</item>
        </list>
      </change>
      <change who="#sb" when="2021-05-17">
        <list>
          <item>added note-in-respStmt constraint</item>
          <item>added publication_date constraint</item>
        </list>
      </change>
      <change who="#lj" when="2021-11-02">Added <gi>choice</gi> and <name>model.choicePart</name> from the original schema.</change>
      <change who="#lj" when="2021-05-10">Added <name>require-encodingDesc</name> and <name>require-docback</name> constraints.</change>
      <change who="#lj" when="2021-05-04">Added a content model for <gi>respStmt</gi>.</change>
      <change who="#bb" when="2020-12-15">Added new tei header to accomodate moving metadata (author/recip etc) out of bibl. </change>
      <change who="#lj" when="2020-12-07">Added <gi>resp</gi> and <gi>respStmt</gi> to the header.</change>
      <change who="#bb" when="2018-12-03">Added <gi>gap</gi>. Removed namespace from new <gi>persRef</gi> element.</change>
      <change who="#bb" when="2018-11-27">Added <gi>del</gi>.</change>
      <change who="#sb" when="2018-10-02">Add new <gi>persRef</gi>.</change>
      <change who="#sb" when="2018-09-14">
        <list>
          <item>Minor tweaks to metadata, etc</item>
          <item>Deleted lots of pointless stuff</item>
          <item>Added <val>month</val> to <att>type</att> of
          <gi>div</gi> (dunno why it wasn't already there)</item>
          <item>Added MHS placeholder namespace</item>
          <item>Added <att>mhs:startingOnPage</att> and <att>mhs:volume</att> of <gi>div</gi></item>
        </list>
      </change>
      <change who="#sb" when="2018-09-13">Created with <name type="pgm">oddbyexample</name> using
        the current release version of P5 and the 5 example files in
        codem/manage/samplexml/jqa/*.xml</change>
    </revisionDesc>
  </teiHeader>
  <text>
    <body>
      <head>Primary Source Cooperative at the Masschusetts Historical Society Encoding
        Language</head>
      <p>We use a highly constrained TEI customization with a few extensions.</p>
    </body>
    <back>
      <schemaSpec ident="primarysourcecoop_rev1" start="TEI teiCorpus div">
        <desc>Schema intended to support at least jqa/ &amp; correspondence/</desc>
        <moduleRef key="tei"/>

        <!-- ========= core module ========= -->
        <moduleRef key="core" include="abbr add author bibl cb choice date del editor expan gap head hi item l label lb lg list name note orig p pb ptr publisher ref reg resp respStmt title unclear sourceDesc textClass keywords list"/>
        <elementSpec ident="date" mode="change">
          <constraintSpec scheme="schematron" ident="datingAttr">
            <constraint>
              <sch:pattern>
                <sch:rule context="tei:application | tei:date[ not( @prev | @calendar ) ]">
                  <sch:assert test="@when or @when-custom or @when-iso or
                                    @notBefore or @notBefore-custom or @notBefore-iso or
                                    @notAfter or @notAfter-iso or @notAfter-custom or
                                    @from or @from-custom or @from-iso or
                                    @to or @to-custom or @to-iso"
                              >At least one temporal normalization attribute should be specified on a &lt;<sch:value-of
                                    select="name(.)"/>>.</sch:assert>
                </sch:rule>
              </sch:pattern>
            </constraint>
          </constraintSpec>
          <constraintSpec ident="source_date_content" scheme="schematron">
            <constraint>
              <sch:rule context="tei:sourceDesc/tei:bibl/tei:date">
                <sch:assert test="matches( normalize-space(.), '^(([0-9]{1,2} )?[A-Z][a-z]+[a-z]+ )?[0-9]{2}[0-9]{2}?$' )">
                  The source date should contain a human-readable date in the form “DD Mon YYYY”
                </sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
          <attList>
            <attDef ident="type" mode="change">
              <valList mode="add" type="closed">
                <valItem ident="creation"/>
                <valItem ident="transcription"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="list" mode="change">
          <attList>
            <attDef ident="type" mode="delete"/>
            <attDef ident="type" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="pb" mode="change">
          <attList>
            <attDef ident="type" mode="change">
              <valList mode="add" type="closed">
                <valItem ident="ms"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="cb" mode="change">
          <attList>
            <attDef ident="type" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="author" mode="change">
          <attList>
            <attDef ident="role" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="bibl" mode="change">
          <attList>
            <attDef ident="type" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="titleStmt" mode="change">
          <content>
            <sequence>
              <elementRef key="title" minOccurs="1" maxOccurs="unbounded"/>
              <classRef key="model.respLike" minOccurs="0" maxOccurs="unbounded"/>
              <elementRef key="respStmt" minOccurs="1" maxOccurs="unbounded"/>
            </sequence>
          </content>
        </elementSpec>

        <!-- ========= header module ========= -->
        <moduleRef key="header"/>
        <elementSpec ident="teiHeader" mode="change">
          <constraintSpec ident="require-encodingDesc" scheme="schematron">
            <constraint>
              <sch:assert test="tei:encodingDesc">An encoding description (element "encodingDesc") is required in the TEI Header.</sch:assert>
            </constraint>
          </constraintSpec>
        </elementSpec>
        <elementSpec ident="fileDesc" mode="change">
          <content>
            <sequence>
              <sequence>
                <elementRef key="titleStmt"/>
                <elementRef key="editionStmt" minOccurs="0"/>
                <elementRef key="extent" minOccurs="0"/>
                <elementRef key="publicationStmt"/>
                <elementRef key="seriesStmt" minOccurs="1" maxOccurs="unbounded"/>
                <elementRef key="notesStmt" minOccurs="0"/>
              </sequence>
              <elementRef key="sourceDesc" minOccurs="1" maxOccurs="unbounded"/>
            </sequence>
          </content>
        </elementSpec>
        <elementSpec ident="respStmt" mode="change">
          <constraintSpec ident="note-in-respStmt" scheme="schematron">
            <constraint>
              <sch:rule context="tei:respStmt">
                <sch:assert test="tei:note">A responsibility statement needs a child &lt;note> element</sch:assert>
              </sch:rule>
              <sch:rule context="tei:respStmt/tei:note">
                <sch:assert test="tei:date">The date of a responsibility statement should be indicated by a &lt;date> in the &lt;note></sch:assert>
              </sch:rule>
              <sch:rule context="tei:respStmt/tei:note/tei:date">
                <sch:assert test="@type eq 'transcription'">The &lt;date> inside the &lt;note> of a &lt;respStmt> should be categorized with @type (as a transcriptional note, i.e. type="transcription")</sch:assert>
                <sch:assert test="@when">The &lt;date> inside the &lt;note> of a &lt;respStmt> must have a machine readable date (on @when)</sch:assert>
                <sch:assert test="normalize-space(.) eq ''">The &lt;date> inside the &lt;note> of a &lt;respStmt> should be empty</sch:assert>
              </sch:rule>
            </constraint>
          </constraintSpec>
        </elementSpec>
        <elementSpec ident="publicationStmt" mode="change">
          <constraintSpec ident="publication_date" scheme="schematron">
            <desc><gi>date</gi> child of <gi>publicationStmt</gi>
            should be constrained by Schematron to 21st century before
            next year.</desc>
            <constraint>
              <sch:rule context="tei:publicationStmt/tei:date">
                <sch:let name="pub_date" value="normalize-space(.)"/>
                <sch:let name="pub_year" value="if ( matches( $pub_date, '^[0-9]+$' ) )
                                                then $pub_date cast as xs:integer
                                                else if ( contains( $pub_date, '-' ) )
                                                  then substring-before( $pub_date, '-') cast as xs:integer
                                                  else 0"/>
                <sch:let name="year_before_pub_year" value="$pub_year - 1"/>
                <sch:assert test="$pub_date castable as xs:gYear
                               or $pub_date castable as xs:gYearMonth
                               or $pub_date castable as xs:date">The publication date should be a year in YYYY format, a year and month in YYYY-MM format, or a date in YYYY-MM-DD format.</sch:assert>
                <sch:assert test="matches( $pub_date, '^20[0-9][0-9](-[01][0-9](-[0-3])?)?')">The date of publication should be in the 21st century</sch:assert>
                <sch:report test="$year_before_pub_year gt year-from-date( current-date() )">The date of publication should not be in the future (at least, not past next year)</sch:report>
              </sch:rule>
            </constraint>
          </constraintSpec>
        </elementSpec>
        <elementSpec ident="change" module="header" mode="change">
          <attList>
            <attDef ident="who" usage="req" mode="change"/>
            <attDef ident="when" usage="req" mode="change"/>
          </attList>
        </elementSpec>

        <!-- ========= namesdates module ========= -->
        <!-- ========= verse module ========= -->
        <!-- ========= transcr module ========= -->
        <moduleRef key="transcr" include="space supplied"/>
        <!-- ========= linking module ========= -->
        <!-- ========= analysis module ========= -->
        <!-- ========= textstructure module ========= -->
        <moduleRef key="textstructure"
          include="TEI text front body back div salute signed dateline opener closer postscript"/>
        <elementSpec ident="TEI" mode="change">
          <attList>
            <attDef ident="version" mode="delete"/>
            <attDef ident="type" mode="change">
              <valList mode="add" type="closed">
                <valItem ident="month"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>

        <!--
             The <body> is limited to very precise content:
             - 1   <div type="docbody">
             - 0+  <div type="insertion">
             - 1   <div type="docback">
        -->
        <elementSpec ident="body" mode="change" module="textstructure">
          <content>
            <sequence>
              <elementRef key="docbody" minOccurs="1" maxOccurs="1"/>
              <elementRef key="insertion" minOccurs="0" maxOccurs="unbounded"/>
              <elementRef key="docback" minOccurs="1" maxOccurs="1"/>
            </sequence>
          </content>
        </elementSpec>

        <!-- the 3 main <div>s (i.e., the children of <body>): -->
        <elementSpec ident="docbody" mode="add">
          <altIdent>div</altIdent>
          <content>
            <macroRef key="macro.docbody"/>
          </content>
          <attList>
            <attDef ident="type">
              <valList mode="add" type="closed">
                <valItem ident="docbody"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="insertion" mode="add">
          <altIdent>div</altIdent>
          <classes>
            <memberOf key="att.global"/>
            <memberOf key="att.divLike"/>
            <!-- not att.typed, as we have our own @type and do not want @subtype -->
            <memberOf key="att.declaring"/>
            <memberOf key="att.written"/>
          </classes>
          <content>
            <elementRef key="p" minOccurs="1" maxOccurs="unbounded"/>
          </content>
          <attList>
            <attDef ident="type">
              <valList mode="add" type="closed">
                <valItem ident="insertion"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="docback" mode="add">
          <altIdent>div</altIdent>
          <content>
            <elementRef key="sourceNote" minOccurs="1" maxOccurs="2"/>
            <elementRef key="fn" minOccurs="0" maxOccurs="unbounded"/>
          </content>
          <attList>
            <attDef ident="type">
              <valList mode="add" type="closed">
                <valItem ident="docback"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <!-- all other <div>s: -->
        <elementSpec ident="div" mode="change">
          <attList>
            <attDef ident="type" mode="change">
              <valList mode="add" type="closed">
                <valItem ident="doc"/>
                <valItem ident="entry"/>
                <valItem ident="month"/>
              </valList>
            </attDef>
            <attDef ident="startingPage" mode="add" ns="http://www.masshist.org/ns/1.0">
              <datatype>
                <dataRef key="teidata.count"/>
              </datatype>
            </attDef>
            <attDef ident="volume" mode="add" ns="http://www.masshist.org/ns/1.0">
              <datatype>
                <dataRef key="teidata.count"/>
              </datatype>
            </attDef>
          </attList>
        </elementSpec>
        <!-- Subsnippets -->
        <elementSpec ident="fn" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="fn"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sourceNote" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <sequence>
              <elementRef key="sn_doctype" minOccurs="1" maxOccurs="1"/>
              <elementRef key="sn_repository" minOccurs="1" maxOccurs="1"/>
              <elementRef key="sn_collection" minOccurs="1" maxOccurs="1"/>
              <elementRef key="sn_condition" minOccurs="0" maxOccurs="1"/>
              <elementRef key="sn_address" minOccurs="0" maxOccurs="1"/>
              <elementRef key="sn_endorsement" minOccurs="0" maxOccurs="1"/>
              <elementRef key="sn_notation" minOccurs="0" maxOccurs="1"/>
            </sequence>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="source"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_doctype" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="doctype"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_repository" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="repository"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_collection" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="collection"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_condition" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="condition"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_address" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="address"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_endorsement" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="endorsement"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <elementSpec ident="sn_notation" mode="add">
          <altIdent>note</altIdent>
          <classes>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <macroRef key="macro.specialPara"/>
          </content>
          <attList>
            <attDef ident="type" usage="req">
              <valList mode="add" type="closed">
                <valItem ident="notation"/>
              </valList>
            </attDef>
          </attList>
        </elementSpec>
        <macroSpec ident="macro.docbody">
          <content>
            <!-- ( head?, opener, ( p | lg | l | gap )+, closer?, postscript* ) -->
            <elementRef key="head"       minOccurs="0" maxOccurs="1"/>
            <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
            <elementRef key="opener"     minOccurs="1" maxOccurs="1"/>
            <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
            <alternate minOccurs="1" maxOccurs="unbounded">
              <elementRef key="p"/>
              <elementRef key="lg"/>
              <elementRef key="l"/>
              <elementRef key="gap"/>
            </alternate>
            <alternate minOccurs="0" maxOccurs="unbounded">
              <elementRef key="p"/>
              <elementRef key="lg"/>
              <elementRef key="l"/>
              <elementRef key="gap"/>
              <classRef key="model.global"/>
            </alternate>
            <elementRef key="closer" minOccurs="0" maxOccurs="1"/>
            <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
            <sequence minOccurs="0" maxOccurs="unbounded">
              <elementRef key="postscript" minOccurs="1" maxOccurs="unbounded"/>
              <classRef key="model.global" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
          </content>
          <constraintSpec scheme="schematron" ident="no_space_child_of_docbody">
            <constraint>
              <sch:rule context="tei:div[@type eq 'docbody']/tei:space">
                <sch:report test="not( @dim eq 'horizontal')">The &lt;space> element is used only for horizontal space, not vertical, and thus should not be between paragraph-level things.</sch:report>
              </sch:rule>
            </constraint>
          </constraintSpec>
        </macroSpec>
        <!-- ========= figures module ========= -->
        <moduleRef key="figures" include="table row cell"/>
        <elementSpec ident="table" mode="change">
          <attList>
            <attDef ident="rows" mode="delete"/>
            <attDef ident="type" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="row" mode="change">
          <attList>
            <attDef ident="rows" mode="delete"/>
          </attList>
        </elementSpec>
        <elementSpec ident="persRef" mode="add">
          <equiv filter="./codem2tei.xslt"/>
          <gloss>person reference</gloss>
          <desc>contains a reference (typically a non-name reference) to a person or person
            group</desc>
          <classes>
            <memberOf key="att.global"/>
            <memberOf key="att.naming"/>
            <memberOf key="model.nameLike"/>
            <memberOf key="att.typed"/>
          </classes>
          <content>
            <macroRef key="macro.phraseSeq"/>
          </content>
          <!-- Waiting for examples -->
        </elementSpec>
        <elementSpec ident="recipient" ns="http://www.tei-c.org/ns/1.0" mode="add">
          <desc>Indicates a person or entity who is the primary audience of the document.</desc>
          <classes>
            <memberOf key="model.biblPart"/>
            <memberOf key="att.global"/>
            <memberOf key="att.naming"/>
          </classes>
          <content>
            <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="macro.phraseSeq"/>
          </content>
        </elementSpec>
        <elementSpec ident="subject" ns="http://www.tei-c.org/ns/1.0" mode="add">
          <desc>Concise phrase that represents the historical topic of the document.</desc>
          <classes>
            <memberOf key="model.biblPart"/>
            <memberOf key="att.global"/>
          </classes>
          <content>
            <rng:ref xmlns:rng="http://relaxng.org/ns/structure/1.0" name="macro.phraseSeq"/>
          </content>
        </elementSpec>
        <elementSpec ident="head" module="core" mode="change">
          <classes mode="replace">
            <memberOf key="model.headLike"/>
            <memberOf key="model.pLike"/>
            <memberOf key="model.pLike.front"/>
            <memberOf key="att.global"/>
          </classes>
        </elementSpec>
        <elementSpec ident="sourceDesc" module="header" mode="change">
          <classes mode="replace">
            <memberOf key="att.declarable"/>
            <memberOf key="att.global"/>
          </classes>
        </elementSpec>
        <!-- ========= msdescription module ========= -->
        <moduleRef key="msdescription"
          except="accMat acquisition additional additions adminInfo altIdentifier binding bindingDesc catchwords collation colophon condition custEvent custodialHist decoDesc decoNote depth dim dimensions explicit filiation finalRubric foliation handDesc height heraldry history incipit layout layoutDesc locus locusGrp msFrag msItemStruct musicNotation objectDesc objectType origDate origPlace origin provenance recordHist rubric scriptDesc seal sealDesc secFol signatures source stamp summary support supportDesc surrogates typeDesc typeNote watermark width"
        />
      </schemaSpec>
    </back>
  </text>
</TEI>
